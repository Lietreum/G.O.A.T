const client = new Client({
  user: "postgres",
  host: "localhost",
  database: "book_store_api",
  password: "RendraGelo1",
  port: 5432,
});

client
  .connect()
  .then(() => {
    console.log("Terhubung ke database PostgreSQL");
  })
  .catch((error) => {
    console.error("Gagal terhubung ke postgreSQL");
  });

app.get('/users',(req, res) => {
    client
  .connect()
  .then(() => {
    console.log("Terhubung ke database PostgreSQL");
  })
  .catch((error) => {
    console.error("Gagal terhubung ke postgreSQL");
  });

  let data;
  client.query("SELECT user_id, nama, alamat FROM public.users;", (req, result) => {
  res.json(result.rows);
  });
});
      
app.get('/users/:id', async (req, res) => {

});

app.post('/users', async (req, res) => {
  let data = req.body;

  const query = "INSERT INTO public.users(user_id, nama, alamat)VALUES ($1, $2, $3);";

  client.query(query,[data.user_id,data.nama,data.alamat], (err, result) =>{
    if(err){console.error("Error executing INSERT query:", err);
    return res.status(500).json({ error: "Terjadi kesalahan " + err});
    }else{
      res.json({
        message: "Data berhasil di tambahkan",
      })
    }
  });
});


// res.json({
//   message: "data users",
//   data: data,
// });

app.listen(port,() => console.log(`Server running on port ${port}`));;
// const data_users = [
//   { id: 1, name: "Bedul Arya", alamat: "Denki" },
//   { id: 2, name: "Giya Saputri", alamat: "Dungsema" },
//   { id: 3, name: "Stefany Stellar", alamat: "Wakanda" },
//   { id: 4, name: "Iyan maulana", alamat: "Kembar" },
//   { id: 5, name: "Faris Ahmad Suki", alamat: "Logam " },
// ];

// app.get("/pengguna", (req, res) => {
//   const data = data_users;
//   let result = {
//       status: 200,   
//       data: data,
//   };
//   res.json(result);
// });
// app.get("/pengguna/:id", (req, res) => {
//   let id = parseInt(req.params.id);
//   let result;
//   const user = data_users.find((user) => user.id === id);
//   if (user) {
//       result = {
//       status: 200,
//       data: user,
//       };
//   } else {
//       res.status(404).json({ error: "User not found" });
//   }
//   res.json(result);
// });





